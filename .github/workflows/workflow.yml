name: Build OCaml Project

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ocaml-compiler: [5.0.x, 4.13.x]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Ubuntu 系统依赖处理（关键修改）
      - name: Setup Ubuntu Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          # 1. 添加必要的第三方仓库（如需要）
          sudo add-apt-repository -y universe
          
          # 2. 更新时忽略缺失的包
          sudo apt-get update -yq --allow-unauthenticated --ignore-missing
          
          # 3. 安装可用包（跳过不存在的darcs）
          sudo apt-get install -yq --no-install-recommends \
            bubblewrap \
            g++-multilib \
            gcc-multilib \
            mercurial \
            musl-tools \
            rsync || true
          
          # 4. 单独处理darcs（通过OPAM安装）
          if ! command -v darcs &>/dev/null; then
            echo "darcs not found, will be installed via OPAM later"
          fi

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          # 启用自动系统依赖处理
          system-packages: auto
          # 禁用自动安装冲突包
          disable-sandboxing: true

      - name: Install OPAM Dependencies
        run: |
          # 通过OPAM安装缺失的darcs
          opam depext --install darcs -y || echo "Darcs installation skipped"
          opam install . --deps-only --with-doc --with-test

      - name: Build with Dune
        run: opam exec -- dune build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: _build/default/**
