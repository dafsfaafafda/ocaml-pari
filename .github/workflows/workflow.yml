
name: Build OCaml Project (Multi-Platform)

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.yml'
      - '**.yaml'
      - '**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.yml'
      - '**.yaml'
      - '**'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12]
        ocaml-compiler: ["5.0.x", "4.13.x"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install System Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update -y
            sudo apt-get install -y \
              bubblewrap \
              g++-multilib \
              gcc-multilib \
              musl-tools \
              rsync
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install \
              bubblewrap \
              gcc \
              musl-cross \
              rsync
          fi

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true

      - name: Install OPAM Dependencies
        run: |
          opam install . --deps-only --with-doc --with-test
          opam depext --install darcs -y || echo "Darcs installation skipped"

      - name: Build with Dune
        run: |
          opam exec -- dune build @install
          find _build -type f -name "*.native" -o -name "*.exe" -o -name "*.a" -o -name "*.so" | xargs ls -la

      - name: Archive all files
        run: |
          tar -czvf all_files.tar.gz .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}-${{ matrix.ocaml-compiler }}
          path: |
            _build/
            all_files.tar.gz
          retention-days: 3
